{"version":3,"sources":["components/Navbar/index.js","pages/Home/index.js","pages/About/index.js","pages/Swaddle/index.js","pages/Gallery/index.js","pages/Donate/index.js","pages/Login/index.js","pages/Register/index.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","className","href","Home","About","Swaddle","Gallery","Donate","Login","Register","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6OAqEeA,MAnEf,WACE,OACE,yBAAKC,UAAU,kDAIb,wBAAIA,UAAU,gBACZ,wBAAIA,UAAU,YACZ,uBACEC,KAAK,QAELD,UAAU,YAHZ,0BAQF,wBAAIA,UAAU,YACZ,uBACEC,KAAK,SAELD,UAAU,YAHZ,YAQF,wBAAIA,UAAU,YACZ,uBACEC,KAAK,WAELD,UAAU,YAHZ,4BAQF,wBAAIA,UAAU,YAEZ,uBACEC,KAAK,WAELD,UAAU,YAHZ,oBAQF,wBAAIA,UAAU,YACZ,uBACEC,KAAK,UAELD,UAAU,YAHZ,WAQF,wBAAIA,UAAU,YACZ,uBACEC,KAAK,SAELD,UAAU,YAHZ,aC7CKE,MARf,WACE,OACE,oCACE,sCCKSC,MARf,WACE,OACE,oCACE,uCCKSC,MARf,WACE,OACE,oCACE,yCCKSC,MARf,WACE,OACE,oCACE,yCCKSC,MARf,WACE,OACE,oCACE,wCCKSC,MARf,WACE,OACE,oCACE,uCCKSC,MARf,WACE,OACE,oCACE,0CCyBSC,MAlBf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,SAASC,UAAWT,IACtC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,WAAWC,UAAWR,IACxC,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,WAAWC,UAAWP,IACxC,kBAAC,IAAD,CAAOK,OAAK,EAACC,KAAK,UAAUC,UAAWN,IACvC,kBAAC,IAAD,CAAOK,KAAK,SAASC,UAAWL,IAEhC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,kBAAkBC,UAAWJ,OCfjDK,G,MAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwB1B,OAAOC,UAC3C0B,SAAW3B,OAAOC,SAAS0B,OAIvC,OAGF3B,OAAO4B,iBAAiB,QAAQ,WAC9B,IAAMvB,EAAK,UAAMqB,GAAN,sBAEP5B,EAwCV,SAAiCO,GAE/BwB,MAAMxB,GACHI,MAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BT,OAAOC,SAASoC,eAKpBjC,EAAgBC,MAGnBc,OAAM,WACLF,QAAQC,IACN,oEA5DAoB,CAAwBjC,GAGxBD,EAAgBC,OChCxBkC,K","file":"static/js/main.97fe30a8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      {/* <a className=\"navbar-brand\" href=\"/\">\n        Logo Goes HERE (img)\n      </a> */}\n      <ul className=\"nav nav-tabs\">\n        <li className=\"nav-item\">\n          <a\n            href=\"#home\"\n            // onClick={() => props.handlePageChange(\"Home\")}\n            className=\"nav-link\"\n          >\n            Home (or LOGO image?)\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#login\"\n            // onClick={() => props.handlePageChange(\"Login\")}\n            className=\"nav-link\"\n          >\n            Sign In\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#swaddle\"\n            // onClick={() => props.handlePageChange(\"Swaddle\")}\n            className=\"nav-link\"\n          >\n            Swaddle (Create a Meme)\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          {/* set so this doesn't show unless logged in? */}\n          <a\n            href=\"#gallery\"\n            // onClick={() => props.handlePageChange(\"Gallery\")}\n            className=\"nav-link\"\n          >\n            My Meme Gallery\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#donate\"\n            // onClick={() => props.handlePageChange(\"Donate\")}\n            className=\"nav-link\"\n          >\n            Donate\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a\n            href=\"#about\"\n            // onClick={() => props.handlePageChange(\"About\")}\n            className=\"nav-link\"\n          >\n            About\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction Home() {\n  return (\n    <>\n      <h1>Home</h1>\n    </>\n  );\n}\n\nexport default Home;\n// function swaddlePenguin(props) {\n//   return <div />;\n// }\n\n// export default swaddlePenguin;\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction About() {\n  return (\n    <>\n      <h1>About</h1>\n    </>\n  );\n}\n\nexport default About;\n// function swaddlePenguin(props) {\n//   return <div />;\n// }\n\n// export default swaddlePenguin;\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction Swaddle() {\n  return (\n    <>\n      <h1>Swaddle</h1>\n    </>\n  );\n}\n\nexport default Swaddle;\n\n//COMMENTED FOR DEMO ROUTING\n\n// const Jimp = require(\"jimp\");\n\n// // Initiate the images:\n// let imgPenguin = \"./public/assets/images/penguins/penguinTest1.jpg\"; // background image examples should all be the same size\n// let sweaterRaw = \"./public/assets/images/sweaters/redSweaterTest.png\"; // png layer\n// // THIS CAN GO IN AN API POST\n// let imgExported = \"./public/assets/images/exportedImages/swaddle.jpg\"; //\n\n// // MOVE THIS TO THE TEXT INPUT COMPONENT\n// let textData = {\n//   // we will save our sweaters to have minimal transparant pad pad\n//   text: \"BOOM\", //the text to be rendered on the image - will be input\n//   maxWidth: 1004, // SET THIS AS penguin image width - 10px margin left - 10px margin right\n//   maxHeight: 100, // SET THIS AS penguin image width - 10px margin top - 10px margin bottom\n//   placementX: -150, // x axis\n//   placementY: 550 // y axis\n// };\n\n// // read template\n// Jimp.read(imgPenguin)\n\n//   //combine sweater into image\n//   .then(mashUp =>\n//     Jimp.read(sweaterRaw)\n//       .then(sweaterTemplate => {\n//         sweaterTemplate.opacity(1);\n//         // numbers in next line are the position x, y for the sweater overlaw\n//         return mashUp.composite(sweaterTemplate, 100, 400, [\n//           Jimp.BLEND_DESTINATION_OVER,\n//           0.2,\n//           0.2\n//         ]);\n//       })\n\n//       //load font\n//       .then(textTemplate =>\n//         Jimp.loadFont(Jimp.FONT_SANS_64_WHITE).then(font => [\n//           // Jimp.loadFont(\"./public/assets/fonts/FlappyBirdy-60.fnt\").then(font => [\n//           // We will need to convert a font we link into a .fnt and save it to the repo\n//           textTemplate,\n//           font\n//         ])\n//       )\n\n//       //  add text\n//       .then(data => {\n//         textTemplate = data[0];\n//         font = data[1];\n\n//         return textTemplate.print(\n//           font,\n//           textData.placementX,\n//           textData.placementY,\n//           {\n//             text: textData.text,\n//             alignmentX: Jimp.HORIZONTAL_ALIGN_CENTER,\n//             alignmentY: Jimp.VERTICAL_ALIGN_MIDDLE\n//           },\n//           textData.maxWidth,\n//           textData.maxHeight\n//         );\n//       })\n\n//       //export image\n//       .then(textTemplate => textTemplate.quality(100).write(imgExported))\n\n//       //log exported filename\n//       .then(textTemplate => {\n//         console.log(\"exported file: \" + imgExported);\n//       })\n\n//       //catch errors\n//       .catch(err => {\n//         console.error(err);\n//       })\n//   );\n\n// // wrap above in this?\n// function swaddlePenguin(props) {\n//   return <div />;\n// }\n\n// export default swaddlePenguin;\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction Gallery() {\n  return (\n    <>\n      <h1>Gallery</h1>\n    </>\n  );\n}\n\nexport default Gallery;\n// function swaddlePenguin(props) {\n//   return <div />;\n// }\n\n// export default swaddlePenguin;\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction Donate() {\n  return (\n    <>\n      <h1>Donate</h1>\n    </>\n  );\n}\n\nexport default Donate;\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction Login() {\n  return (\n    <>\n      <h1>Login</h1>\n    </>\n  );\n}\n\nexport default Login;\n","import React from \"react\";\n// import \"./style.css\";\n\nfunction Register() {\n  return (\n    <>\n      <h1>Register</h1>\n    </>\n  );\n}\n\nexport default Register;\n","import React from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Swaddle from \"./pages/Swaddle\";\nimport Gallery from \"./pages/Gallery\";\nimport Donate from \"./pages/Donate\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/swaddle\" component={Swaddle} />\n        <Route exact path=\"/gallery\" component={Gallery} />\n        <Route exact path=\"/donate\" component={Donate} />\n        <Route path=\"/login\" component={Login} />\n        {/* might want a switch */}\n        <Route exact path=\"/login/register\" component={Register} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}